@page "/register"
@using Microsoft.AspNetCore.Components
@using Blazor.HelloGalaxy.Shared
@using Blazor.HelloGalaxy.Client.Infrastructure
@inject HttpClientFactory HttpClientFactory
 
<h3>User registration</h3>
@if (!registeredWithSuccess)
{
    <EditForm Model="userToRegister" OnValidSubmit="RegisterUserAsync">
        <DataAnnotationsValidator />
        <ValidationSummary></ValidationSummary>
        <div class="form-group my-3">
            <label for="email">Email address</label>
            <InputText @bind-Value="userToRegister.Email" id="email" class="form-control" />
            <ValidationMessage For="() => userToRegister.Email"/>
        </div>
        <div class="form-group my-3">
            <label for="password">Password</label>
            <InputText @bind-Value="userToRegister.Password" type="password" id="password" class="form-control" />
            <ValidationMessage For="() => userToRegister.Password"/>
        </div>
        <button class="btn btn-primary" type="submit">OK</button>
 
        @if(attemptFailed)
        {
            <p class="my-3 text-danger">@attemptRegisterFailedErrorMessage</p>
        }
    </EditForm>
} else
{
    <h4>Register successful</h4>
    <NavLink class="btn btn-primary" href="signin">Login</NavLink>
}
@code {
    private readonly RegisterRequest userToRegister = new();
    private bool registeredWithSuccess = false;
    private bool attemptFailed = false;
    private string? attemptRegisterFailedErrorMessage = null;

    private async Task RegisterUserAsync()
    {
        var httpClient = await HttpClientFactory.GetClientAsync();

        var httpResponseMessage = await httpClient.PostAsJsonAsync("api/accounts/register", userToRegister);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            registeredWithSuccess = true;
        }
        else
        {
            attemptRegisterFailedErrorMessage = await httpResponseMessage.Content.ReadAsStringAsync();
            attemptFailed = true;
        }
    }

}